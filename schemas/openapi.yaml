openapi: 3.0.0
info:
  version: 1.0.0
  title: Web API Development Back End
  description: An API for a dog charity to allow users to add, update, remove and read listings
  contact:
    name: Preeth Selvamohan
    email: selvamop@coventry.ac.uk
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://comedy-mobile-3000.codio-box.uk/api/v1'
    description: Development server
tags:
  - name: Users
    description: API endpoints for user management.
  - name: Dogs
    description: Access and perform CRUD operations on dog entries.
  - name: Favourites
    description: Access and perform CRUD operations on dog entries that have been selected as favourites.
  - name: Messages
    description: Access and perform CRUD operations on message entries.
paths:
  /users:
    summary: Represents an individual user
    description: >
      This resource represents an individual user in the system.
      Each user is identified by a numeric `id`.
    post:
      tags:
        - Users
      description:
        Create a new user account.
      requestBody:
        description: All new user data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./user.json#/definitions/user
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/userUpdated
    get:
      tags:
        - Users
      description:
        Get a list of all users.
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/userList
        '401':
          description: Only admin or staff users can list all accounts
  /users/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: Numeric id of the user
    get:
      tags:
        - Users
      description:
        Get user by id.
      responses:
        '200':
          description: View of user record
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/userView
        '401':
          description: Non-admin users can only view their own record
        '404':
          description: Not found
    put:
      tags:
        - Users
      description:
        Update user by id.
      requestBody:
        description: Update a visible property or the password.
        required: true
        content:
          application/json:
            schema:
              $ref: ./user.json#/definitions/userUpdate
      responses:
        '200':
          description: Confirmation and link to record.
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/userUpdated
        '404':
          description: Not found
    delete:
      tags:
        - Users
      description:
        Delete user by id.
      responses:
        '200':
          description: Confirmation of deletion.
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/userDeleted
        '401':
          description: Only admin users can delete accounts
        '404':
          description: Not found
  /dogs:
    summary: Represents an individual user
    description: >
      This resource represents an individual dog entry in the system.
      Each dog is identified by a numeric `id`.
    post:
      tags:
        - Dogs
      description:
        Create a new dog entry.
      requestBody:
        description: All new dog data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./dog.json#/definitions/dog
      responses:
        '201':
          description: User created
    get:
      tags:
        - Dogs
      description:
        Get a list of all dogs.
      responses:
        '200':
          description: List of dogs
  /dogs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: Numeric id of the dog entry
    get:
      tags:
        - Dogs
      description:
        Get dog entry by id.
      responses:
        '200':
          description: View of dog record
        '404':
          description: Not found
    put:
      tags:
        - Dogs
      description:
        Update dog by id.
      requestBody:
        description: Update the dogs name, breed or image associated.
        required: true
        content:
          application/json:
            schema:
              $ref: ./dog.json#/definitions/dogUpdate
      responses:
        '200':
          description: Confirmation and link to record.
        '404':
          description: Not found
    delete:
      tags:
        - Dogs
      description:
        Delete dog entry by id.
      responses:
        '200':
          description: Confirmation of deletion.
        '401':
          description: Only admin or staff users can delete accounts
        '404':
          description: Not found
  /dogs/{name}:
    parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
        description: String to filter dog entries by
    get:
      tags:
        - Dogs
      description:
        Get dog entry by name.
      responses:
        '200':
          description: View of dog records
        '404':
          description: Not found
  /dogs/{breed}:
    parameters:
      - in: path
        name: breed
        schema:
          type: string
        required: true
        description: String to filter dog entries by
    get:
      tags:
        - Dogs
      description:
        Get dog entry by breed.
      responses:
        '200':
          description: View of dog records
        '404':
          description: Not found
  /favourites/{id}:
    summary: Represents an all dog entries favourited by a user
    description: >
      This resource represents an individual dog entry chosen (favourited).
      Each dog is identified by a numeric `id`.
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: Numeric id of the dog entry favourited
    get:
      tags:
        - Favourites
      description:
        Get favourited dog entry by id.
      responses:
        '200':
          description: View of Favourited record(s)
        '404':
          description: Not found
    post:
      tags:
        - Favourites
      description:
        Add a new favourited dog entry to favourites list.
      requestBody:
        description: Unique dog entry.
        required: true
      responses:
        '201':
          description: Entry added
    delete:
      tags:
        - Favourites
      description:
        Delete Favourited dog entry by id.
      responses:
        '200':
          description: Confirmation of deletion.
        '401':
          description: Non-admin users can only view their own record
        '404':
          description: Not found
  /messages:
    summary: Represents all messages sent by users
    description: >
      This resource represents an individual message in the system.
      Each message is identified by a numeric `id`.
    post:
      tags:
        - Messages
      description:
        Create a new message.
      requestBody:
        description: All new message data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./messages.json#/definitions/messages
      responses:
        '201':
          description: Message created
    get:
      tags:
        - Messages
      description:
        Get a list of all Messages.
      responses:
        '200':
          description: List of Messages
        '401':
          description: Only admin or staff users can list all messages
  /messages/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: Numeric id of the message
    get:
      tags:
        - Messages
      description:
        Get message by id.
      responses:
        '200':
          description: View of users sent message
        '401':
          description: Non-admin users can only view their own record
        '404':
          description: Not found
    put:
      tags:
        - Messages
      description:
        Update Message by id.
      requestBody:
        description: Update message title or content.
        required: true
        content:
          application/json:
            schema:
              $ref: ./messages.json#/definitions/messageUpdate
      responses:
        '200':
          description: Confirmation.
        '404':
          description: Not found
    delete:
      tags:
        - Messages
      description:
        Delete Message by id.
      responses:
        '200':
          description: Confirmation of deletion.
        '401':
          description: Only admin or staff users can delete messages
        '404':
          description: Not found